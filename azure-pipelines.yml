pool:
  vmImage: 'vs2017-win2016'

variables:
  buildConfiguration: 'Release'

steps:
#- script: |
    #dotnet build ./src/ClassLibrary1/ClassLibrary1.csproj --configuration $(buildConfiguration)
    #dotnet build ./src/ClassLibrary2/ClassLibrary2.csproj --configuration $(buildConfiguration)
  #displayName: 'dotnet build $(buildConfiguration) Libraries'
  

#- script: |
    #dotnet nuget push ./src/ClassLibrary1/bin/Release/*.nupkg --no-symbols --api-key $(MyGetKey) --source https://www.myget.org/F/stef-test/api/v2/package
  #displayName: 'Publish to MyGet 1 !'

- task: DotNetCoreCLI@2
  displayName: Build !
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    configuration: 'Release'

- task: DotNetCoreCLI@2
  displayName: dotnet nuget push
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  inputs:
    command: custom
    custom: nuget
    arguments: push $(Build.ArtifactStagingDirectory)/packages/*.nupkg --source https://www.myget.org/F/stef-test/api/v3/index.json --no-service-endpoint --api-key $(MyGetKey)


- task: DotNetCoreCLI@2
  displayName: Pack !
  inputs:
    command: pack
    projects: '**/*.csproj'
    packDirectory: '$(Build.ArtifactStagingDirectory)/packages'
    configuration: 'Release'

- task: PublishBuildArtifacts@1
  displayName: Publish Artifacts !
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    configuration: 'Release'

- task: DotNetCoreCLI@2
  displayName: dotnet nuget push
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  inputs:
    command: custom
    custom: nuget
    arguments: push $(Build.ArtifactStagingDirectory)/packages/*.nupkg --source https://www.myget.org/F/stef-test/api/v3/index.json --no-service-endpoint --api-key $(MyGetKey)

#- task: DotNetCoreCLI@2
#  displayName: 'MyGet !'
#  inputs:
#    configuration: 'Release'
#    command: 'push'
#    projects: '**/*.csproj'
#    packagesToPush: '**/*.nupkg'
#    nuGetFeedType: 'external' 
#    publishVstsFeed: 'https://www.myget.org/F/stef-test/api/v2/package'
#    publishFeedCredentials: '$(MyGetKey)'
#    versioningScheme: 'byPrereleaseNumber'